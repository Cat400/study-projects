#include <stdio.h>
#include <math.h>

float func(float w) 
{
    float y = pow(w,3) - 7 * w + 10;
    return y;
}

float funcx(float x){
    float y=x;
    return y;
}
float calculation_of_integral(float a, float b, int number_part, float (*func)(float) ) 
{
    float dx = fabs(a-b)/number_part;
    float lower_limit = (a < b) ?  a : b;
    func(lower_limit);
    float integral;
    for(int c = 1; c <= number_part; c++, lower_limit += dx) {
        
         integral += (func(lower_limit) + func(lower_limit + dx)) / 2 * dx;
        
    }
    return integral;
}
float absolute_error(float a, float b, int n) 
{
    float max_second_derivative = (a < b) ? 6 * b : 6 * a;
    float error = fabs((max_second_derivative * pow((b - a),3)) / (12 * n * n));
    return error;
}

void print(float func){
    printf("%f", func);
}

int main()
{
    float a;
    float b;
    int number_part;
    printf("enter limits of integration and a number of partition");
    scanf("%f", &a);
    scanf("%f", &b);
    scanf("%d", &number_part);
    funcx(a);
    calculation_of_integral(a, b, number_part, funcx);
    absolute_error(a,b, number_part);
    print(calculation_of_integral(a, b, number_part, funcx));
    print(absolute_error(a,b, number_part));
}
