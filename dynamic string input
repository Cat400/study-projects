#include <stdio.h>
#include <malloc.h>
#include <string.h>

char *memory(int *n, char *mass){//адрес n
    char array[*n];
    for(int i = 0; i < *n; i++){
        array[i] = mass[i];
    }
    mass = malloc(2 * (*n) * sizeof(char));
    memset(mass, 0, 2 * (*n) * sizeof(char));
    for(int i = 0; i < *n; i++){
        mass[i] = array[i];
    }
    *n = 2 * *n;
    return mass;
}

char *changesize(int lenght, char *array){
    free(array);
    array = malloc(lenght * sizeof(char));
    return array;
}

int count(char *m){
    int i = 0;
    while( m[i] != '\0'){
        i++;
    }
    return i;
}

void copy(char *a, char *b, int lenght){
    for(int i = 0; i <= lenght; i++){
        a[i]=b[i];
    }
}

char *check_and_correctsize(int lenght, char *mass){//считает реальный размер и изменяет данный
    int i = count(mass); 
    if( i != lenght){
        char array[i];
        copy(array, mass, i);
        mass = changesize(i, mass);
        copy(mass, array, i);
    }
    return mass;
}

int check_sign(char p){
    char symbol_need_space[10]={'!', '.', ',', '(', ';', ':', '-', '?'};
    for (int j=0; j < 10; j++){
        if(p == symbol_need_space[j]){
            return 1;
        }
    }
    return 0;
}

void correcttext(int lenght, char *mass){
    char p[2*lenght];
    copy(p, mass, lenght);
    check_sign(1);
    int i=0;
    for(; i < 2 * lenght; i++){
        if( ( p[i+1] == '.' || p[i+1] == ',')&&(p[i] == ' ') ){//удаление пробелов перед точкой и запятой
           for(int j=i; j < 2 * lenght ; j++){
               p[j]=p[j+1];
           }
       } 
        if((p[i] == ' ')&&(p[i+1]==' ')){//удаление двух пробелов, следующих подряд
          for(int j=i+1; j < 2 * lenght-1; j++){
              p[j] = p[j+1];
          } 
       }
       if(check_sign(p[i]) && ( p[i+1] != 32)){//пробел после знаков препинания
        for(int j = 2 * lenght-1; j > i; j--)   {
            p[j] = p[j-1]; 
        }
        p[i+1] = ' ';
       }
       if( ( p[i] > '@' )&&( p[i] < '[' )&&( p[i-2] != '.' )&&( i > 1 )){//замена на строчную букву если прежде нет точки
           p[i] = p[i] + 32;
       }
       if(p[i] == '#'){
           p[i] = '\0';
           break;
       }
    }
    check_and_correctsize(i, mass);
    copy(mass, p, i);
}


int main()
{
    int lenght=10;
    char *text;
    //check_func(lenght, mass);
    text = malloc(lenght*sizeof(char));
    char *symbol=text;
    int choice;
    int i=0;
    printf("choose a way of input: 1) console; 2) file");
    scanf("%d", &choice);
    switch(choice){
        case 1:
        printf("input text");
        getchar();
        while( (*symbol++ = getchar()) != '#'){
            i++;
            if(i > lenght - 1){//вызов функции перераспр памяти
                 memory(&lenght, text);  
            }
        }
        break;
        case 2:
        FILE *file;
        char name[10];
        printf("put a name of file");
        scanf("%s", name);
        file = fopen(name, "r");
        while( (*symbol++ = fgetc(file)) != '#'){
            i++;
            if( i > lenght -1){
                memory(&lenght, text);
            }
        }
        fclose(file);
    }
    text = check_and_correctsize(lenght, text);
    correcttext(lenght, text);
    printf("%s", text);
    free(text);
}
